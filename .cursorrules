# Yoav Fun Packages - Cursor Rules

## Project Structure
This is a monorepo containing multiple fun web applications and packages.

## CRITICAL PACKAGE PROTECTION
- **NEVER TOUCH `matan-training` PACKAGE** - This package must remain exactly as it is on the main branch
- **DO NOT MODIFY ANY FILES** in `/packages/matan-training/` directory
- **DO NOT UPDATE REFERENCES** to matan-training in any configuration files
- **DO NOT CHANGE** matan-training's package.json, dependencies, or any code
- matan-training is the original app and must stay completely untouched

## Package Organization
- **Original Package**: `matan-training` (untouchable - keep as-is from main branch)
- **Trainerly Packages**: All new professional training platform packages
  - `trainerly-coach-app`: Coach dashboard and management
  - `trainerly-trainee-app`: Trainee mobile/web app with authentication
  - `trainerly-server`: Backend API server

## Package Management
- **Use yarn workspaces** for all package management operations
- **Never use npm directly** - always use yarn workspace commands
- To run dev server: `yarn workspace [package-name] dev`
- To install dependencies: `yarn workspace [package-name] add [dependency]`
- To build: `yarn workspace [package-name] build`

## Development Commands
### Original App (DO NOT CHANGE)
- Start matan-training dev server: `yarn workspace matan-training dev`
- Build matan-training: `yarn workspace matan-training build`

### Trainerly Platform
- Start trainerly-coach-app: `yarn workspace trainerly-coach-app dev`
- Start trainerly-trainee-app: `yarn workspace trainerly-trainee-app dev`
- Start trainerly-server: `yarn workspace trainerly-server dev`
- Install root dependencies: `yarn install`

## Git Workflow
- **NEVER use `git push`** - only commit changes with `git commit`
- The user will handle all pushing to remote repositories
- Always use `git add` and `git commit` for saving changes
- Never run `git push` under any circumstances

## Code Style
- Use TypeScript for all new code
- Follow React best practices
- Maintain responsive design for mobile and desktop
- Use modern CSS features and flexbox/grid layouts
